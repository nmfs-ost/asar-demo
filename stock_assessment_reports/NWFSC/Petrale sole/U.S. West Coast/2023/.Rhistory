path = dribble_document$parent,
name = gfile,
type = "document")
finish_process(paste("Document uploaded at",
cli::col_blue(paste(gpath, gfile, sep = "/"))))
return(res)
#---- temp file ----
# create .temp-file to upload
temp_file <- file.path(file_info$path,
paste0(".temp-", file_info$file_basename, ".txt"))
file.copy(file, temp_file, overwrite = TRUE)
# remove temp-file on exit
on.exit(invisible(file.remove(temp_file)), add = TRUE)
# read document lines
document <-  readLines(temp_file, warn = FALSE)
# Format document to a single string
document_oneline <- format_document(document,
file_info = file_info,
hide_code = hide_code)
cat(document_oneline, file = temp_file)
start_process("Updating document with local changes to Google Drive...")
# Update document
res <- googledrive::drive_update(
media = temp_file,
file = dribble_document$file)
temp_file
dribble_document$file
?googledrive::drive_update
dribble_document$file
View(dribble_document)
source("~/GitHub-Repos/ASAR/R/upload_files.R", echo=TRUE)
source("~/GitHub-Repos/ASAR/R/utils.R", echo=TRUE)
source("~/GitHub-Repos/ASAR/R/utils_rich_text.R", echo=TRUE)
source("~/GitHub-Repos/ASAR/R/utils_dribble.R", echo=TRUE)
source("~/GitHub-Repos/ASAR/R/utils_chunk.R", echo=TRUE)
upload_files <- function(
office = NULL,
region = NULL,
species = NULL,
year = NULL,
shared_drive = NULL,
hide_code = FALSE,
path_output = NULL,
rich_text = TRUE,
rich_text_par = NULL,
force = FALSE,
open = rlang::is_interactive()
) {
# Adding customization to function for SAR Tool
# Files in skeleton
if (!is.null(region)) {
subdir <- paste0("~/stock_assessment_templates", "/", office, "/", species, "/", region, "/", year)
} else {
subdir <- paste0("~/stock_assessment_templates", "/", office, "/", species, "/", year)
}
# Section skeletons/files - .qmd only
all_sections <- list.files(subdir, pattern = ".qmd")
sections <- all_sections[!grepl("skeleton.qmd", all_sections)]
cat(cli::cat_rule(paste("Uploading files to", cli::col_magenta("Google Drive"))), "\n")
# gpath <- gsub("/$", "", gpath) # remove possible final "/"
#---- check arguments ----
# if(!is.logical(force)) stop("force argument has to be logical",
#                             call. = FALSE)
#----    get autho token    ----
if(!googledrive::drive_has_token()){
googledrive::drive_auth()
}
start_process("Uploading documents to Google Drive...")
# Upload all files in folder
for (i in 1:length(sections)) {
file = paste(subdir, sections[i], sep = "/")
gfile = gsub(".qmd","", sections[i])
if(!is.null(region)){
gpath = paste("National Stock Assessment Report Archive", office, region, species, year, sep = "/")
} else {
gpath = paste("National Stock Assessment Report Archive", office, species, year, sep = "/")
}
#---- check document info ----
document <- evaluate_file(file = file,
gfile = gfile,
gpath = gpath,
shared_drive = shared_drive,
test = "none")
# check_supported_documents(document$file_info)
#---- check output info----
# if (!is.null(path_output)) {
#   output <- evaluate_file(file = path_output,
#                           gfile = paste0(document$gfile, "-output"),  # name based on the correct gfile of the document
#                           gpath = gpath,
#                           shared_drive = shared_drive,
#                           test = "none")
# }
#---- upload document ----
res <- upload_document(
file = document$file,
file_info = document$file_info,
gfile = document$gfile,
gpath = gpath,
dribble_document = document$dribble_info,
hide_code = hide_code,
rich_text = rich_text,
rich_text_par = rich_text_par)
#---- upload output ----
if (!is.null(path_output)) {
dribble_output <- upload_output(
path_output = output$file,
output_info = output$file_info,
gfile_output = output$gfile,
gpath = gpath,
dribble_output = output$dribble_info,
update = FALSE,
force = force)
res[2, ] <- dribble_output
res <- googledrive::as_dribble(res)
return(invisible(res))
}
#---- end ----
# trackdown::finish_process("Process completed!")
# if (open) {
#   utils::browseURL(res[["drive_resource"]][[1]][["webViewLink"]])
# }
}
cat(cli::cat_rule(paste("Process completed!")), "\n")
}
source("~/GitHub-Repos/ASAR/R/utils_chunk.R", echo=TRUE)
source("~/GitHub-Repos/ASAR/R/utils_dribble.R", echo=TRUE)
source("~/GitHub-Repos/ASAR/R/utils_rich_text.R", echo=TRUE)
source("~/GitHub-Repos/ASAR/R/utils.R", echo=TRUE)
upload_files(
office = "SWFSC",
species = "Pacific sardine",
year = 2024,
hide_code = TRUE
)
remotes::install_github("Schiano-NOAA/ASAR@googledrive-link")
ASAR::upload_files(
office = "SWFSC",
species = "Pacific sardine",
year = 2024,
hide_code = TRUE
)
# Testing simple example for ASAR
library(remotes)
remotes::install_github("nmfs-ost/ASAR")
# Simple example
ASAR::create_template(
new_template = TRUE,
format = "pdf",
office = "SWFSC",
region = "GB",
species = "Random fish",
spp_latin = "Pomatomus saltatrix",
year = 2024,
author = c("John Snow", "Danny Phantom", "Patrick Star"),
type = "SAR",
model_results = "report.sso",
model = "SS"
)
?ASAR::create_template
list.files(system.file('templates','skeleton', package = 'ASAR'))
# Highest level example
ASAR::create_template(format = "pdf",
office = "NEFSC",
region = "Georges Bank",
species = "Rand spp",
spp_latin = "latino sppname",
year = 2024,
author = c("John Snow", "Danny Phantom", "Patrick Star"),
type = "SAR",
param_names = c("fleet1", "fleet2", "ssb"),
param_values = c("Recreational", "Commercial long line", "spawning stock biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/Dover Sole Example Files",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-discussion",
custom = TRUE,
custom_sections = c("executive summary","data","model","results","discussion","references")
)
remotes::install_github("nmfs-ost/asar")
pull_parms2$'.31'
devtools::install_github("nmfs-ost/satf@convert-output", force = TRUE)
devtools::install_github("nmfs-ost/satf@output-converter", force = TRUE)
?devtools::install_github
devtools::install_github("nmfs-ost/satf", ref = "output-converter", force = TRUE)
# test convert output function
devtools::install_github("nmfs-ost/satf", ref = "output-converter", force = TRUE)
# test convert output function
devtools::install_github("nmfs-ost/asar", ref = "output-converter", force = TRUE)
out_new <- asar::convert_output(output.file = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/Scoping/Assessment Models/BAM/black sea bass/BSB76.rdat",
model = "BAM",
fleet_names = c("cl", "cL","cp","mrip","ct", "hb", "HB", "comm","Mbft","CVID"))
?asar::convert_output
# test convert output function
devtools::install_github("nmfs-ost/asar", ref = "output-converter", force = TRUE)
?asar::convert_output
# test convert output function
devtools::install_github("nmfs-ost/asar", ref = "output-converter", force = TRUE)
?asar::convert_output
?asar::create_template
system.file("templates", "skeleton", package = "asar")
list.files(system.file("templates", "skeleton", package = "asar"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
gc()
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Erik Williams", "Lisa Ailloud", "Kyle Shertzer"),
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "ss3",
new_section = "Environmental Factors",
section_location = "after-discussion",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results","tables", "figures"))
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Erik Williams", "Lisa Ailloud", "Kyle Shertzer"),
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-discussion",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results","tables", "figures"))
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-discussion",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results","tables", "figures"))
list.files(system.file("templates", "skeleton", package = "asar"))
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-discussion",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
?asar::create_template
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = TRUE,
section_name = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
devtools::install_github("nmfs-ost/asar", force = TRUE)
asar::create_template(format = "pdf",
office = "SEFSC",
species = "Red Snapper",
spp_latin = "Lutjanus campechanus",
year = 2023,
author = c("Lisa Ailloud", "Kyle Shertzer"),
include_affiliation = TRUE,
simple_affiliation = FALSE,
type = "SAR",
param_names = c("fleet1","fleet2", "sb"),
param_values = c("recreational", "commercial", "spawning biomass"),
resdir = "C:/Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples/Red snapper",
model_results = "Report.sso",
model = "SS3",
new_section = "Environmental Factors",
section_location = "after-results",
custom = TRUE,
custom_sections = c("executive summary","introduction","data","results"))
remotes::install_github("nmfs-ost/asar", force = TRUE)
getwd
getwd()
remotes::install_github("nmfs-ost/asar@convert-output-ss3-bugs")
asar::create_template()
remove.packages('asar')
remotes::install_github("nmfs-ost/asar@convert-output-ss3-bugs")
remotes::install_github("nmfs-ost/asar@convert-output-ss3-bugs")
library(pacman)
.libPaths()
inatall.packages("MASS")
install.packages("MASS")
library(asar)
?asar::convert_output
asar::convert_output(output_file = "Simple_Report.sso", outdir = "Downloads", model = "SS3", file_save = TRUE, savedir = "C:Users\samantha.schiano\Documents\Stock Assessment Workflow\SS_output_examples")
asar::convert_output(output_file = "Simple_Report.sso", outdir = "Downloads", model = "SS3", file_save = TRUE, savedir = "C:Users/samantha.schiano/Documents/Stock Assessment Workflow/SS_output_examples", save_name = "simple_ss3_example_convert")
asar::convert_output(output_file = "Simple_Report.sso", outdir = "~/Stock Assessment Workflow/SS_output_examples/Simple", model = "SS3", file_save = TRUE, savedir = "~\Stock Assessment Workflow/SS_output_examples/Simple", save_name = "simple_ss3_example_convert")
asar::convert_output(output_file = "Simple_Report.sso", outdir = "~/Stock Assessment Workflow/SS_output_examples/Simple", model = "SS3", file_save = TRUE, savedir = "~/Stock Assessment Workflow/SS_output_examples/Simple", save_name = "simple_ss3_example_convert")
remotes::install_github("nmfs-ost/asar")
setwd("~/asar_live_demo/stock_assessment_reports/NWFSC/Petrale sole/U.S. West Coast/2023")
